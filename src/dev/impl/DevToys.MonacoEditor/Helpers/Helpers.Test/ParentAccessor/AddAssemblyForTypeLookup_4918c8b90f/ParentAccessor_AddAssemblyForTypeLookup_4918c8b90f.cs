// Test generated by RoostGPT for test int-test using AI Type Azure Open AI and AI Model roost-gpt

using NUnit.Framework;
using System;
using System.Collections.Generic;
using System.Reflection;

namespace YourTestNamespace
{
    [TestFixture]
    public class YourTestClass
    {
        [Test]
        public void TestAddAssemblyForTypeLookup()
        {
            // Arrange
            var assembly = Assembly.GetExecutingAssembly();
            var expectedCount = Assemblies.Count + 1;

            // Act
            AddAssemblyForTypeLookup(assembly);
            
            // Assert
            Assert.AreEqual(expectedCount, Assemblies.Count);
            Assert.IsTrue(Assemblies.Contains(assembly));
        }

        [Test]
        public void TestAddAssemblyForTypeLookup_NullArgument()
        {
            // Arrange
            Assembly assembly = null;

            // Act and Assert
            Assert.That(() => AddAssemblyForTypeLookup(assembly),
                Throws.TypeOf<ArgumentNullException>());
        }
        
        private List<Assembly> Assemblies { get; set; }

        internal void AddAssemblyForTypeLookup(Assembly assembly)
        {
            if (assembly == null)
            {
                throw new ArgumentNullException(nameof(assembly), "Assembly cannot be null");
            }

            Assemblies.Add(assembly);
        }
    }
}
