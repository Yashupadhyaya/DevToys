// Test generated by RoostGPT for test unt-test using AI Type Azure Open AI and AI Model roost-gpt

using NUnit.Framework;
using System;
using System.Collections.Generic;

namespace YourNamespace
{
    public class YourTestClass
    {
        private Dictionary<string, Action> actions;

        [SetUp]
        public void Setup()
        {
            // Arrange - Setup actions dictionary
            actions = new Dictionary<string, Action>();
        }
        
        [Test]
        public void TestCallAction_ExistingAction_ReturnsTrue()
        {
            // Arrange - Add action to dictionary
            string actionName = "TestAction";
            bool actionInvoked = false;
            actions.Add(actionName, () => actionInvoked = true);
            
            // Act - Call action
            bool result = CallAction(actionName);
            
            // Assert - Check if action was invoked and result is true
            Assert.IsTrue(actionInvoked);
            Assert.IsTrue(result);
        }
        
        [Test]
        public void TestCallAction_NonExistingAction_ReturnsFalse()
        {
            // Arrange - No actions added to dictionary
            
            // Act - Call action with non-existing name
            bool result = CallAction("NonExistingAction");
            
            // Assert - Check if result is false
            Assert.IsFalse(result);
        }
        
        public bool CallAction(string name)
        {
            if (actions is not null && actions.ContainsKey(name))
            {
                actions[name]?.Invoke();
                return true;
            }
            
            return false;
        }
    }
}
